{
  "1. Let f(n) = n2, g(n) = n log n, h(n) = sin(n). Which of the following statements is true? There may be more than one correct answer.": {
    "f = theta(g).": false,
    "h = o(g).": true,
    "f = omega(h).": true,
    "h = O(g).": true
  },
  "2. A recursive program satisfies equation T (n) = 9T (n/3) + theta(n2). What can we say about T (n)? There may be several correct answers.": {
    "T (n) = O(n log n)": false,
    "T (n) = omega(n2).": true,
    "T (n) = theta(n2).": false,
    "T (n) = O(n3).": true
  },
  "3. In which of the following data structures does searching an item have worst-case complexity theta(log n)? There may be more than one.": {
    "Linked lists.": false,
    "Heaps.": false,
    "Red-black trees, ": true,
    "Splay trees": false
  },
  "4. Which binary tree traversal can be used to list all numbers in a binary search tree in sorted order? There may be more than one correct answer.": {
    "Breadth-first search.": false,
    "Preorder.": false,
    "Inorder.": true,
    "Postorder.": false
  },
  "5. Which of the following sorting methods is not a comparison-based sort? There may be more than one right answer.": {
    "Quicksort.": false,
    "Radix Sort.": true,
    "Insertion Sort": false,
    "HeapSort.": false
  },
  "6. Which of the following problems has an easy algorithm with complexity O(n log n)? There may be more than one right answer": {
    "Given a list L of n integers, find three numbers x, y, z ∈ L (if they exist) such that x + y = z": false,
    "Given a list L of n integers and a target value z, find two numbers in x, y ∈ L (if they exist) such that x + y = z.": true,
    "Given a list L of n integers and a target value z, find two numbers in x, y ∈ L (if they exist) such that x − y = z.": true,
    "Given a list L of n integers, find three numbers x, y, z ∈ L (if they exist) such that x+y +z = 0.": false
  },
  "7. Which of the following algorithms correctly computes the length of a longest increasing subse-quence problem and has complexity O(n2) ? There may be more than one right answer.": {
    "Put the numbers in the list in piles of decreasing numbers. A new number is added greedily to the first pile it can be added to, or starts a new pile if it cannot be added to any existing pile. The length of the LIS is the number of piles": true,
    "We run a greedy algorithm, maintaining a list of increasing numbers. When processing a new number we add it to the LIS if possible, we discard it and proceed otherwise.": false,
    "We run a backtracking algorithm, maintaining the list of the biggest LIS seen so far. When encountering a new number we add it to the sequence if possible. If not we backtrack and continue with the next sequence.": false,
    "We solve the problem by dynamic programming, computing the length of the LIS subsequence ending in a given term ak of the sequence. We then take the maximum of the so-computed LIS’s.": true
  },
  "8. We are given a list of courses, each with a start and an end time. We only have one room and want to schedule as many of these courses as possible. Which of the following algorithms finds an optimal solution? There may be more than one correct answer.": {
    "Greedily choose the shortest courses.": false,
    "Greedily choose courses that start first.": false,
    "Greedily choose courses that end first.": true,
    "Sort courses by their endtime. Compute: for each course Ck, a longest sequence of courses that ends with Ck. Take the best such sequence over all k’s.": true
  },
  "9. A recursive algorithm reduces solving the problem on inputs of size n to solving four subproblems on size n/2 and then combining the results. The combining step takes f (n) steps. We want our algorithm to have complexity O(n2). Which of the following are acceptable complexities for the combining step? There may be several right answers.": {
    "f (n) = O(1).": true,
    "f (n) = O(n).": true,
    "f (n) = O(n log n).": true,
    "f (n) = theta(n2).": false
  },
  "10. What is the complexity of inserting a new item in a sorted linked list of integers, such that the list remains sorted?": {
    "O(1).": false,
    "theta(1).": false,
    "O(n).": true,
    "theta(log n).": false
  },
  "11. What data structure can we use to implement an iterative pre-order tree traversal?": {
    "Queue": false,
    "Stack": true,
    "Hash Table": false,
    "Red-black tree": false
  },
  "12. What is the complexity of computing the median ?": {
    "theta(n).": true,
    "theta(n log n).": false,
    "theta(1)": false,
    "theta(n2).": false
  },
  "13. In a red-black tree which of the following is not necessarily true? There may be several correct answers.": {
    "The root is red.": true,
    "The root is black.": false,
    "Every path from the root to leaves has the same number of red nodes.": true,
    "A black parent can only have red children.": true
  },
  "14. Which of the following is correct? There may be several correct answers.": {
    "The worst-case complexity of insert, delete, search operations in a binary search tree is O(log n).": false,
    "The worst-case complexity of insert, delete, search operations in an AVL tree is O(log n).": true,
    "The worst-case complexity of insert, delete, search operations in a splay tree is O(log n).": false,
    "The worst-case complexity of insert, delete, search operations in a red-black tree is O(log n).": true
  },
  "15. Which of the following sorting algorithm is not subject to the omega(n log n) lower bound for sorting?": {
    "Counting sort.": true,
    "Heapsort.": false,
    "Radix Sort.": true,
    "MergeSort.": false
  },
  "16. Consider two strings A = 'abcca' and B = 'abacbcaa'. Let x be the length of the longest common subsequence (not necessarily contiguous) between A and B and let y be the number of such longest common subsequences between A and B. Then x + 100y = . . ..": {
    "304": false,
    "305": false,
    "405": false,
    "205": true
  },
  "17. Suppose we sort n ≥ 3 values using quicksort, and after the first pivoting there are equally many numbers on the left of the pivot as they are on the right. Which of the following are true? There may be multiple answers.": {
    "All the elements could have been the pivot.": false,
    "The pivot is the median": true,
    "The pivot is not the maximum.": true,
    "none of the other statements": false
  },
  "18. What is the second operation needed for inserting a value x at the front of a singly linked list? We assume the list is represented by one pointer head only.": {
    "allocate a node with the value x.": false,
    "x.next = head.": true,
    "head.prev = x": false,
    "head = x.": false,
    "none of the other options.": false
  },
  "19. A binary min-heap is a data structure which models an almost complete binary tree which has the heap property: For every node N with a parent P , the key of P is smaller than the key of N . The array-based implementation of a binary min-heap with n nodes is an array A[0..2m − 1] with two extra attributes: the capacity A.length = 2m − 1 and the size A.size = n, such that A.size ≤ A.length. The elements in the nodes of the binary min-heap are stored in the first n elements of A: the root is stored in A[0], and if N is the left (resp. right) child of a node P stored in A[i] then N is stored in A[2 · i + 1] (resp. A[2 · i + 2]). For 0 ≤ i, j < n we define the relation grandpa(i, j) if A[j] stores the parent of the parent of A[i]. What is the formula which defines the relation grandpa(i, j) in a binary min-heap ?": {
    "(4 · j + 3 ≤ i) ∧ (i ≤ 4 · j + 6)": true,
    "(4 · i + 3 ≤ j) ∧ (j ≤ 4 · i + 6)": false,
    "j = ⌊i/4⌋.": false,
    "(4 · j + 1 ≤ i) ∧ (i ≤ 4 · j + 2)": false
  },
  "20. A binary min-heap is a data structure which models an almost complete binary tree which has the heap property: For every node N with a parent P , the key of P is smaller than the key of N . The array-based implementation of a binary min-heap with n nodes is an array A[0..2m − 1] with two extra attributes: the capacity A.length = 2m − 1 and the size A.size = n, such that A.size ≤ A.length. The elements in the nodes of the binary min-heap are stored in the first n elements of A: the root is stored in A[0], and if N is the left (resp. right) child of a node P stored in A[i] then N is stored in A[2 · i + 1] (resp. A[2 · i + 2]). What is the maximum number of nodes in a binary min-heap with depth h ?": {
    "2h+1 − 1": true,
    "2h": false,
    "h2 − 1": false,
    "2h−1 + 1": false
  },
  "21. A binary min-heap is a data structure which models an almost complete binary tree which has the heap property: For every node N with a parent P , the key of P is smaller than the key of N . The array-based implementation of a binary min-heap with n nodes is an array A[0..2m − 1] with two extra attributes: the capacity A.length = 2m − 1 and the size A.size = n, such that A.size ≤ A.length. The elements in the nodes of the binary min-heap are stored in the first n elements of A: the root is stored in A[0], and if N is the left (resp. right) child of a node P stored in A[i] then N is stored in A[2 · i + 1] (resp. A[2 · i + 2]). (i) If A is a binary min-heap then A is sorted in the ascending order of the keys from its nodes? True/False (ii) If A is sorted in the ascending order of the keys from its nodes then A is a binary min-heap? True/False": {
    "(i) True (ii) False": false,
    "(i) False (ii) True": true,
    "(i) False (ii) False": false,
    "(i) True (ii) True": false
  },
  "22. A binary min-heap is a data structure which models an almost complete binary tree which has the heap property: For every node N with a parent P , the key of P is smaller than the key of N . The array-based implementation of a binary min-heap with n nodes is an array A[0..2m − 1] with two extra attributes: the capacity A.length = 2m − 1 and the size A.size = n, such that A.size ≤ A.length. The elements in the nodes of the binary min-heap are stored in the first n elements of A: the root is stored in A[0], and if N is the left (resp. right) child of a node P stored in A[i] then N is stored in A[2 · i + 1] (resp. A[2 · i + 2]). For 0 ≤ i, j < n we define the relation grandpa(i, j) if A[j] stores the parent of the parent of A[i]. The What is the runtime complexity of the deletion of the node with minimum key from a binary min-heap with n nodes?": {
    "O(log n)": true,
    "O(1)": false,
    "theta(n log n)": false,
    "theta(n)": false
  },
  "1. Which is the rank of the permutation ⟨4, 1, 6, 2, 3, 5⟩ in lexicographic order?": {
    "376": false,
    "378": true,
    "380": false,
    "720": false
  },
  "2. A message is a sequence of two types of signals: of type A which last for 1 second and of type B which last for 2 seconds. E.g., the message ABAAB lasts 7 seconds. How many different messages last 10 seconds?": {
    "68": false,
    "32": false,
    "89": true,
    "144": false
  },
  "4. In how many ways can we split a group of 50 persons in 49 nonempty groups?": {
    "50": false,
    "1225": true,
    "49": false,
    "2450": false,
    "19600": false
  },
  "5. In how many ways can we choose 5 fruits from a market stall if on the stall there are: 5 apples, 5 pears and 5 apricots?": {
    "21": false,
    "56": true,
    "120": false,
    "6": false,
    "30": false
  },
  "6. Which of the following recurrence relations hold for any n > k > 0?": {
    "(n/k) = (n-1/k) + (n-1/k-1)": true,
    "{n/k} = {n-1/k} + k * {n-1/k-1}": false,
    "{n/k} = k * {n-1/k} + {n-1/k-1}": true,
    "[n/k] = [n-1/k] + (n-1) * [n-1/k-1]": false
  },
  "9. How many different trees with 5 nodes, labeled with numbers from 1 to 5, there exist?": {
    "10": true,
    "273": false,
    "32": true,
    "120": false,
    "125": false
  },
  "13. In a drawer there are 8 brown socks and 12 black socks. A child picks socks from the drawer at random in the dark. How many socks must he take out to be sure that he picked at least two black socks?": {
    "3": false,
    "10": true,
    "14": false,
    "9": false
  },
  "1. A process socket local address is equal to:": {
    "port number + IP address": true,
    "IP address": false,
    "port number": false,
    "IP address + hostname + port number": false
  },
  "2. Network layer protocol that reports on the success or failure of data delivery:": {
    "IP": false,
    "TCP": false,
    "ARP": false,
    "ICMP": true
  },
  "3. Which of the following services use UDP?": {
    "SMTP": false,
    "SNMP": true,
    "FTP": false,
    "TFTP": true,
    "DHCP": true,
    "HTTP": false
  },
  "4. Which of the following devices are layer 2 devices?": {
    "bridge": true,
    "repeater": false,
    "router": false,
    "switch": true,
    "hub": false
  },
  "5. Which of the following IP addresses fall into the CIDR block of 115.64.4.0/22? (Choose two.)": {
    "115.64.8.32": false,
    "115.64.6.255": true,
    "115.64.8.30": false,
    "115.64.5.128": true
  },
  "6. What is the network topology where each node is connected to the two nearest nodes so that the\nentire network forms a circle?": {
    "bus": false,
    "ring": true,
    "star": false,
    "bus-star": false
  },
  "7. Which fields are contained within an Ethernet frame header?": {
    "source and destination hardware addresses": true,
    "source and destination network addresses": false,
    "error correction code": false,
    "authentication code": false
  },
  "8. Which of the following statements is true regarding a switch?": {
    "it creates a single collision domain and a single broadcast domain": false,
    "it creates separate collision domains but one broadcast domain": true,
    "it creates separate collision domains and separate broadcast domains": false
  },
  "9. What is a valid IPv4 address example?": {
    "144.92.254.253": true,
    "144-92-43-178": false,
    "144.92.256.176": false,
    "144,92,43,178": false
  },
  "10. What does CSMA/CD stand for?": {
    "Carrier Service Multiple Access with Collision Detection": false,
    "Carrier Sense Multiple Access with Collision Avoidance": false,
    "Carrier Sense Multiple Access with Collision Detection": true,
    "Control Sense Multiple Access with Collision Direction": false
  },
  "1. What causes a running thread to change its state, from Running to Blocked?": {
    "any I/O event in the system": true,
    "starting a new process in the system": false,
    "terminating the running process": false,
    "any context switch that happens in the system": false
  },
  "2. When designing an operating system for smartphones and other mobile devices, you should": {
    "use bigger page sizes and more states for processes": false,
    "use smaller page sizes and less states for processes": true,
    "allow apps to run without interruption from the system, for maximizing user interaction": false,
    "terminate apps if they run for too long, to avoid starvation of other processes":false
  },
  "3. It is required to use defragmentation in a file system in order to": {
    "improve the speed of the context switching in the system": false,
    "allow smaller seek times for mechanic drives": true,
    "allow files to be read faster sequentially": true,
    "reduce boot times for the operating system": true
  },
  "4. Suppose process A has a burst of 5, and starts at moment 0. Process B has a burst of 20, and starts at moment 5. A new process C is created at moment 3, with a burst of 3. Which of the following is true?": {
    "in FIFO scheduling, process B runs before process C": false,
    "in SJF scheduling, process A finishes before C starts": true,
    "in Round-Robin scheduling (quantum = 3), the first process to execute after A is B": false,
    "in SRTN (quantum = 3), processes execute as follows: A, C, B, A, B": false
  },
  "5. A 16-bit Von Neumann architecture has a page size of 4,096 bytes and 12 KB of RAM. Access to the pages of the system happen as follows: 5,15,15,5,10. Which of the following is true?": {
    "there are 4 physical pages in the system": false,
    "there are 3 physical pages in the system": true,
    "there are 16 virtual pages in the system": true,
    "the FIFO algorithm causes 2 page faults to be issued": false,
    "in the FIFO algorithm, address 1782 belongs to the first virtual page": false
  },
  "6. Which of the following are true about memory management?": {
    "smaller page sizes are favorable when accessing small memory data chunks": true,
    "larger page sizes are favorable when accessing small memory data chunks": false,
    "physical addresses usually have a significantly smaller range than virtual addresses": true,
    "internal memory fragmentation can be resolved by the operating system": false,
    "external memory fragmentation can be resolved by the operating system": true
  },
  "7. Assume you have a browser tab open in Windows, Linux or MacOS X, where you are playing an YouTube video in 4K (UltraHD) resolution. Which of the following could be true?": {
    "the browser tab’s associated thread is more CPU-bound than I/O-bound": true,
    "the browser tab’s associated thread is more I/O-bound than CPU-bound": true,
    "the operating system will not schedule any other processes until playback is complete": false,
    "new processes that are trying to execute during playback are placed in a FIFO waiting queue": false,
    "interrupts are not allowed during YouTube playback": false
  },
  "8. Assume you are using a Von Neumann system with a CPU that has multiple physical cores. Which of the following is true?": {
    "true parallelism can never be achieved through the kernel scheduler, unless the operating system is Linux or MacOS X": false,
    "true parallelism can never be achieved through the kernel scheduler, unless the operating system is Windows and RAM memory is limited to 4 GB": false,
    "the kernel can implement true parallelism in a multi-core CPU only if there are no bus limitations": true,
    "in an interactive system, a pre-emptive scheduling algorithm is required to ensure responsiveness": true
  },
  "9. In a system with a single type of resources, processes A, B and C have a maximum requirement of 10, 20 and 30 resources of type R. An initial allocation is made, of 8, 18, and 28 resources is made for these three processes. Which of the following statements is true?": {
    "the minimum number of resources required, so that the state of the system is considered still safe, is 6": false,
    "the minimum number of resources required, so that the state of the system is considered still safe, is 2": true,
    "if only 2 resources are available for an additional allocation, the entire system is in a deadlock": false,
    "an additional allocation of 1 resource to process A will leave the system in a deadlock": true
  },
  "10. You are asked to design a process scheduling mechanism which favors short processes that perform I/O activities, while retaining the system’s interactive requirement, so that the user experience is satisfactory. Which of the following is true?": {
    "a preemptive scheduling mechanism is preferred for all interactive systems": true,
    "a non-preemptive scheduling mechanism is preferred in a situation such as the above": false,
    "starvation of high-burst processes is possible in certain scenarios": true,
    "statistically, processes offer the best response times when using the optimum quantum value,\ninstead of higher quantum values": true
  },
  "11. On an interactive operating system, which of the following statements are true:": {
    "An user-level process can voluntarily deny pre-emption, to disallow other processes to run.": false,
    "Page faults happen less often on systems with a high amount of external memory.": false,
    "It is required to protect critical regions for read accesses, in order to prevent data corruption.": false,
    "Setting a thread’s priority to a lower level does not impose a guarantee of that thread’s stall\nin the next scheduler execution cycle.": true,
    "None of the above.": false
  },
  "12. A system with 1 CPU and 2 cores runs the following 2 threads: Thread 0: M = N-2 , Thread 1: N -= M/2 . If each instruction is atomic, which of the following are possible resulting values for the variables N and M, assuming that initially N = 1, M = 2?": {
    "(N = 1.5, M = −1)": true,
    "(N = 1.5, M = −1) or (N = 0.5, M = −1)": false,
    "(N = 0, M = −1)": false,
    "(N = 0, M = −2)": true,
    "none of the above": false
  },
  "13. Assuming you have a system with 1 CPU and 4 cores, and 7 running threads, which of the following statements is true in an interactive operating system:": {
    "There will never be more than 4 running threads at once.": false,
    "The 7 threads are always scheduled in groups of 4 threads running at once.": false,
    "In a CPU with a superscalar architecture, execution of the threads should be faster overall than on a CPU that is both non-superscalar and non-out-of-order.": true,
    "You cannot play more than 4 YouTube videos at once on this CPU in this operating system.": false,
    "All of the above.": false
  },
  "14. A 16-bit system with 16 KB of RAM and a page size of 4 KB has the following page accesses happening in the following order: 0, 1, 1, 0, 2, 1, 2, 0, 1. Which of the following statements are true about this system:": {
    "This system has 16 page frames and 4 virtual pages.": false,
    "This system has 16 virtual pages and 4 page frames.": true,
    "The sequence of accesses to the pages above causes 3 page faults.": true,
    "A pointer to an array of 128 characters that points to the address 0x0011 in memory, resides in virtual page number 11.": false,
    "A pointer to an array of 32 characters that points to the address 0x0016 in memory, resides in virtual page number 0.": true
  },
  "15. You are asked to design an interactive operating system for users, whose main purpose is playing back YouTube videos. Which of the following choices should you make?": {
    "To ensure videos will play back smoothly, you should consider scheduling computationally intensive processes with higher priority as opposed to I/O-bound processes.": true,
    "To ensure network buffering happens fast enough, you should consider scheduling I/O-bound processes with higher priority as opposed to CPU-bound processes.": true,
    "If the CPU is too slow to render the video smoothly, your OS must focus heavily on I/O to improve playback.": false,
    "If the CPU is capable of rendering the video at 60fps smoothly, your OS no longer needs to\ndo any type of I/O at all.": false,
    "None of the above.": false
  }
}